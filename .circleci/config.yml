version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.2-node-browsers
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    working_directory: ~/project/server/app/Todoist

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      # - restore_cache:
      #     keys:
      #       - node-v1-{{ checksum "package.json" }}
      #       - node-v1-
      # - run: yarn install
      # - save_cache:
      #     key: node-v1-{{ checksum "package.json" }}
      #     paths:
      #       - node_modules
      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
      - run: composer test
orbs:
  aws-code-deploy: circleci/aws-code-deploy@0.0.9
workflows:
  build_and_deploy_application:
    jobs:
      - build
      - aws-code-deploy/deploy:
          requires:
            - build
          application-name: Todoist_Laravel
          deployment-group: Todoist_Laravel-Group
          service-role-arn: arn:aws:iam::297785152575:role/CodeDeployServiceRole
          bundle-bucket: todoist-laravel
          bundle-key: ${CIRCLE_BRANCH}_${CIRCLE_SHA1}
